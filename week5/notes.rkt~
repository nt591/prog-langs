#lang racket


(provide (all-defined-out))

(define cube1
  (lambda (x)
    (* x (* x x))))

(cube1 3)

(define cube2
  (lambda (x)
    (* x x x)))

(cube2 3)

(define (cube3 x)
  (* x x x))

(cube3 3)

(define (pow1 x y)
  (if (= y 0)
      1
      (* x (pow1 x (- y 1)))))

(pow1 2 4)

(define pow2
  (lambda (x)
    (lambda (y)
      (pow1 x y))))

(define three-to-the (pow2 3))
